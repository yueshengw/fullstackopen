{"ast":null,"code":"var _jsxFileName = \"/Users/suling/Documents/GitHub/fullstackopen/part2/phonebook/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [persons, setPersons] = useState([{\n    name: 'Arto Hellas'\n  }]);\n  const [newName, setNewName] = useState('');\n  const [newNumber, setNewNumber] = useState('');\n\n  const onSubmit = event => {\n    event.preventDefault();\n    const personObject = {\n      name: newName,\n      number: newNumber\n    }; //false is no duplicates\n\n    if (checkDuplicates(personObject) === false) {\n      console.log('hi');\n      setPersons(persons.concat(personObject));\n    } else {\n      alert(`${personObject.name} is already added to phonebook`);\n    }\n\n    setNewName('');\n    console.log(persons);\n  };\n\n  const handleInputChange = event => {\n    console.log(event.target.id);\n\n    switch (event.target.id) {\n      case 'name':\n        setNewName(event.target.value);\n        break;\n\n      case 'number':\n        setNewNumber(event.target.value);\n        break;\n    }\n  };\n\n  const checkDuplicates = personObject => {\n    const result = persons.some(person => {\n      //console.log('person.name === personObject.name',person.name === personObject.name)\n      return person.name === personObject.name;\n    });\n    console.log('result', result);\n    return result;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Phonebook\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"name: \", /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: handleInputChange,\n          value: newName,\n          id: \"name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"number: \", /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: handleInputChange,\n          value: newNumber,\n          id: \"number\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          onClick: onSubmit,\n          children: \"add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Numbers\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), persons.map(person => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: person.name\n      }, person.name, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 38\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"8AsV6Np+edzMzJu0jxtxgVS+26k=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","App","persons","setPersons","name","newName","setNewName","newNumber","setNewNumber","onSubmit","event","preventDefault","personObject","number","checkDuplicates","console","log","concat","alert","handleInputChange","target","id","value","result","some","person","map"],"sources":["/Users/suling/Documents/GitHub/fullstackopen/part2/phonebook/src/App.js"],"sourcesContent":["import { useState } from 'react'\n\nconst App = () => {\n  const [persons, setPersons] = useState([\n    { name: 'Arto Hellas' }\n  ]) \n  const [newName, setNewName] = useState('')\n  const [newNumber, setNewNumber] = useState('')\n\n  const onSubmit = (event) => {\n    event.preventDefault()\n    const personObject = {\n      name:newName,\n      number:newNumber\n    }\n     //false is no duplicates\n    if (checkDuplicates(personObject) === false)\n    {\n      console.log('hi')\n      setPersons(persons.concat(personObject))\n    }\n    else{\n      alert(`${personObject.name} is already added to phonebook`)\n    }\n    setNewName('')\n    console.log(persons)\n  }\n\n  const handleInputChange = (event) => {\n    console.log(event.target.id)\n    switch (event.target.id) {\n      case 'name':\n        setNewName(event.target.value);\n        break;\n      case 'number':\n        setNewNumber(event.target.value);\n        break;\n    }\n  }\n\n  const checkDuplicates  = (personObject) => {\n    const result = persons.some((person) => {\n      //console.log('person.name === personObject.name',person.name === personObject.name)\n      return person.name === personObject.name\n    });\n    console.log('result',result)\n    return result\n  }\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <form>\n        <div>\n          name: <input onChange={handleInputChange} value={newName} id='name' />\n        </div>\n        <div>\n          number: <input onChange={handleInputChange} value={newNumber} id='number' />\n        </div>\n        <div>\n          <button type=\"submit\" onClick={onSubmit}>add</button>\n        </div>\n\n      </form>\n      <h2>Numbers</h2>\n      {persons.map(person => {return <div key={person.name}>{person.name}</div>})}\n    </div>\n  )\n}\n\nexport default App"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;;;AAEA,MAAMC,GAAG,GAAG,MAAM;EAAA;;EAChB,MAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBH,QAAQ,CAAC,CACrC;IAAEI,IAAI,EAAE;EAAR,CADqC,CAAD,CAAtC;EAGA,MAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBN,QAAQ,CAAC,EAAD,CAAtC;EACA,MAAM,CAACO,SAAD,EAAYC,YAAZ,IAA4BR,QAAQ,CAAC,EAAD,CAA1C;;EAEA,MAAMS,QAAQ,GAAIC,KAAD,IAAW;IAC1BA,KAAK,CAACC,cAAN;IACA,MAAMC,YAAY,GAAG;MACnBR,IAAI,EAACC,OADc;MAEnBQ,MAAM,EAACN;IAFY,CAArB,CAF0B,CAMzB;;IACD,IAAIO,eAAe,CAACF,YAAD,CAAf,KAAkC,KAAtC,EACA;MACEG,OAAO,CAACC,GAAR,CAAY,IAAZ;MACAb,UAAU,CAACD,OAAO,CAACe,MAAR,CAAeL,YAAf,CAAD,CAAV;IACD,CAJD,MAKI;MACFM,KAAK,CAAE,GAAEN,YAAY,CAACR,IAAK,gCAAtB,CAAL;IACD;;IACDE,UAAU,CAAC,EAAD,CAAV;IACAS,OAAO,CAACC,GAAR,CAAYd,OAAZ;EACD,CAjBD;;EAmBA,MAAMiB,iBAAiB,GAAIT,KAAD,IAAW;IACnCK,OAAO,CAACC,GAAR,CAAYN,KAAK,CAACU,MAAN,CAAaC,EAAzB;;IACA,QAAQX,KAAK,CAACU,MAAN,CAAaC,EAArB;MACE,KAAK,MAAL;QACEf,UAAU,CAACI,KAAK,CAACU,MAAN,CAAaE,KAAd,CAAV;QACA;;MACF,KAAK,QAAL;QACEd,YAAY,CAACE,KAAK,CAACU,MAAN,CAAaE,KAAd,CAAZ;QACA;IANJ;EAQD,CAVD;;EAYA,MAAMR,eAAe,GAAKF,YAAD,IAAkB;IACzC,MAAMW,MAAM,GAAGrB,OAAO,CAACsB,IAAR,CAAcC,MAAD,IAAY;MACtC;MACA,OAAOA,MAAM,CAACrB,IAAP,KAAgBQ,YAAY,CAACR,IAApC;IACD,CAHc,CAAf;IAIAW,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAqBO,MAArB;IACA,OAAOA,MAAP;EACD,CAPD;;EASA,oBACE;IAAA,wBACE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAEE;MAAA,wBACE;QAAA,kCACQ;UAAO,QAAQ,EAAEJ,iBAAjB;UAAoC,KAAK,EAAEd,OAA3C;UAAoD,EAAE,EAAC;QAAvD;UAAA;UAAA;UAAA;QAAA,QADR;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAIE;QAAA,oCACU;UAAO,QAAQ,EAAEc,iBAAjB;UAAoC,KAAK,EAAEZ,SAA3C;UAAsD,EAAE,EAAC;QAAzD;UAAA;UAAA;UAAA;QAAA,QADV;MAAA;QAAA;QAAA;QAAA;MAAA,QAJF,eAOE;QAAA,uBACE;UAAQ,IAAI,EAAC,QAAb;UAAsB,OAAO,EAAEE,QAA/B;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MADF;QAAA;QAAA;QAAA;MAAA,QAPF;IAAA;MAAA;MAAA;MAAA;IAAA,QAFF,eAcE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAdF,EAeGP,OAAO,CAACwB,GAAR,CAAYD,MAAM,IAAI;MAAC,oBAAO;QAAA,UAAwBA,MAAM,CAACrB;MAA/B,GAAUqB,MAAM,CAACrB,IAAjB;QAAA;QAAA;QAAA;MAAA,QAAP;IAAkD,CAAzE,CAfH;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAmBD,CAlED;;GAAMH,G;;KAAAA,G;AAoEN,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}